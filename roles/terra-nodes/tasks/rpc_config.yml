- name: Backup config
  shell: "cp {{ service_homedir }}/config/config.toml {{ service_homedir }}/config/config.toml.backup"
  args:
    creates: "{{ service_homedir }}/config/config.toml.backup"
    executable: /bin/bash
    chdir: "/home/{{ terra_username }}/"
    warn: no
  become: yes
  become_user: "{{ terra_username }}"

# #####
# # - name: add persistent_peers
# #   lineinfile:
# #     path: "{{ service_homedir }}/config/config.toml"
# #     regexp: '^persistent_peers'
# #     line: 'persistent_peers = "{{ persistent_peer }}"'
# #   when: persistent_peer is defined

# # - name: add private_peers
# #   lineinfile:
# #     path: "{{ service_homedir }}/config/config.toml"
# #     regexp: '^private_peer_ids'
# #     line: 'private_peer_ids = "{{ private_peer }}"'
# #   when: private_peer is defined
# #####

- name: add seeds
  lineinfile:
    path: "{{ service_homedir }}/config/config.toml"
    regexp: '^seeds'
    line: 'seeds = "{{ seeds  }}"'
  when: seeds is defined
  become: yes
  become_user: "{{ terra_username }}"

- name: enable LCD
  lineinfile:
    path: "{{ service_homedir }}/config/app.toml"
    regexp: '^enable = fals*'
    line: 'enable = true'
  become: yes
  become_user: "{{ terra_username }}"

- name: enable LCD
  lineinfile:
    path: "{{ service_homedir }}/config/app.toml"
    regexp: '^enable = fals*'
    line: 'enable = true'
  become: yes
  become_user: "{{ terra_username }}"

- name: open 26657 to listen on all interfaces
  lineinfile:
    path: /home/terra/.terra/config/config.toml
    regexp: '^laddr = "tcp://127.0.0.1:26657"'
    line: 'laddr = "tcp://0.0.0.0:26657"'
  become: yes
  become_user: "{{ terra_username }}"

- name: enable prometheus
  lineinfile:
    path: "{{ service_homedir }}/config/config.toml"
    regexp: '^prometheus ='
    line: 'prometheus = {{ prometheus_flag  }}'
  when: prometheus_flag is defined

- name: open file limits
  template:
    src: "files/limits.conf"
    dest: "/etc/security/limits.conf"
